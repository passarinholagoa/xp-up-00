---
description: 
globs: 
alwaysApply: false
---
# Seguran√ßa Completa

Esta regra faz uma varredura no projeto para identificar falhas de seguran√ßa, como:

‚úÖ Chaves de API expostas  
‚úÖ Senhas ou tokens em c√≥digo  
‚úÖ Arquivos sens√≠veis versionados (ex: `.env`, `.pem`)  
‚úÖ Configura√ß√µes perigosas (debug ativo, CORS aberto)  
‚úÖ Depend√™ncias vulner√°veis  

## Classifica√ß√£o de Riscos:

üî¥ **Grave**  
- Chaves ou tokens diretamente no c√≥digo  
- Senhas expl√≠citas  
- Arquivos privados versionados  

üü† **M√©dio**  
- Informa√ß√µes de ambiente em arquivos p√∫blicos  
- Debug ou logs ativos em produ√ß√£o  
- Depend√™ncias desatualizadas com vulnerabilidades conhecidas  

üü¢ **Leve**  
- Coment√°rios que revelam informa√ß√µes internas  
- Estruturas que indicam m√° configura√ß√£o  

## Arquivos Relevantes:  
@*.js @*.ts @*.env @*.json @*.yml @*.yaml @*.py @*.config @package.json

---

**Relat√≥rio:**  
Para cada falha encontrada, ser√° gerado:  
- Descri√ß√£o do problema  
- N√≠vel de risco  
- Sugest√£o de corre√ß√£o  

*Exemplo:*  
`src/config.ts` - üî¥ **Grave**  
> API_KEY="123abc..." encontrada no c√≥digo.  
**Corre√ß√£o:** Utilizar vari√°veis de ambiente e garantir que arquivos sens√≠veis n√£o estejam versionados.  

depois de tudo gerer um arquivo chamado "seuguran√ßa" explicando como resolver os problemas.
